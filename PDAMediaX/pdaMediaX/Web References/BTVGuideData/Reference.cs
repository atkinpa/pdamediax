//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace BTVGuideData {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BTVGuideDataSoap", Namespace="http://www.snapstream.com/WebService")]
    public partial class BTVGuideData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLastUpdateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataExtentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByKeywordWithLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByKeywordWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesByKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesByKeywordWithLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodeByStationAndTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesBySeriesIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFirstEpisodeBySeriesIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByStationAndTimeRangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByStationAndSeriesID2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFirstEpisodeByStationAndSeriesID2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByRange2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByRange3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesCount2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeries2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchByTitle2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesByStationAndSeriesIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchByTitleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BTVGuideData() {
            this.Url = global::Properties.Settings.Default.pdaMediaX_BTVGuideData_BTVGuideData;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLastUpdateTimeCompletedEventHandler GetLastUpdateTimeCompleted;
        
        /// <remarks/>
        public event GetDataExtentsCompletedEventHandler GetDataExtentsCompleted;
        
        /// <remarks/>
        public event GetEpisodesByKeywordCompletedEventHandler GetEpisodesByKeywordCompleted;
        
        /// <remarks/>
        public event GetEpisodesByKeywordWithLimitCompletedEventHandler GetEpisodesByKeywordWithLimitCompleted;
        
        /// <remarks/>
        public event GetEpisodesByKeywordWithOptionsCompletedEventHandler GetEpisodesByKeywordWithOptionsCompleted;
        
        /// <remarks/>
        public event GetSeriesByKeywordCompletedEventHandler GetSeriesByKeywordCompleted;
        
        /// <remarks/>
        public event GetSeriesByKeywordWithLimitCompletedEventHandler GetSeriesByKeywordWithLimitCompleted;
        
        /// <remarks/>
        public event GetEpisodeByStationAndTimeCompletedEventHandler GetEpisodeByStationAndTimeCompleted;
        
        /// <remarks/>
        public event GetEpisodesBySeriesIDCompletedEventHandler GetEpisodesBySeriesIDCompleted;
        
        /// <remarks/>
        public event GetFirstEpisodeBySeriesIDCompletedEventHandler GetFirstEpisodeBySeriesIDCompleted;
        
        /// <remarks/>
        public event GetEpisodesByStationAndTimeRangesCompletedEventHandler GetEpisodesByStationAndTimeRangesCompleted;
        
        /// <remarks/>
        public event GetEpisodesByStationAndSeriesID2CompletedEventHandler GetEpisodesByStationAndSeriesID2Completed;
        
        /// <remarks/>
        public event GetEpisodesByStationCompletedEventHandler GetEpisodesByStationCompleted;
        
        /// <remarks/>
        public event GetFirstEpisodeByStationAndSeriesID2CompletedEventHandler GetFirstEpisodeByStationAndSeriesID2Completed;
        
        /// <remarks/>
        public event GetEpisodesByRange2CompletedEventHandler GetEpisodesByRange2Completed;
        
        /// <remarks/>
        public event GetEpisodesByRange3CompletedEventHandler GetEpisodesByRange3Completed;
        
        /// <remarks/>
        public event GetSeriesCollectionCompletedEventHandler GetSeriesCollectionCompleted;
        
        /// <remarks/>
        public event GetSeriesCount2CompletedEventHandler GetSeriesCount2Completed;
        
        /// <remarks/>
        public event GetSeries2CompletedEventHandler GetSeries2Completed;
        
        /// <remarks/>
        public event SearchByTitle2CompletedEventHandler SearchByTitle2Completed;
        
        /// <remarks/>
        public event GetCategoriesCompletedEventHandler GetCategoriesCompleted;
        
        /// <remarks/>
        public event GetSeriesByCategoryCompletedEventHandler GetSeriesByCategoryCompleted;
        
        /// <remarks/>
        public event GetEpisodesByStationAndSeriesIDCompletedEventHandler GetEpisodesByStationAndSeriesIDCompleted;
        
        /// <remarks/>
        public event GetSeriesCountCompletedEventHandler GetSeriesCountCompleted;
        
        /// <remarks/>
        public event GetSeriesByRangeCompletedEventHandler GetSeriesByRangeCompleted;
        
        /// <remarks/>
        public event SearchByTitleCompletedEventHandler SearchByTitleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetLastUpdateTime", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ulong GetLastUpdateTime(string authTicket) {
            object[] results = this.Invoke("GetLastUpdateTime", new object[] {
                        authTicket});
            return ((ulong)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastUpdateTimeAsync(string authTicket) {
            this.GetLastUpdateTimeAsync(authTicket, null);
        }
        
        /// <remarks/>
        public void GetLastUpdateTimeAsync(string authTicket, object userState) {
            if ((this.GetLastUpdateTimeOperationCompleted == null)) {
                this.GetLastUpdateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastUpdateTimeOperationCompleted);
            }
            this.InvokeAsync("GetLastUpdateTime", new object[] {
                        authTicket}, this.GetLastUpdateTimeOperationCompleted, userState);
        }
        
        private void OnGetLastUpdateTimeOperationCompleted(object arg) {
            if ((this.GetLastUpdateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastUpdateTimeCompleted(this, new GetLastUpdateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetDataExtents", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ulong GetDataExtents(string authTicket, out ulong maximum) {
            object[] results = this.Invoke("GetDataExtents", new object[] {
                        authTicket});
            maximum = ((ulong)(results[1]));
            return ((ulong)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataExtentsAsync(string authTicket) {
            this.GetDataExtentsAsync(authTicket, null);
        }
        
        /// <remarks/>
        public void GetDataExtentsAsync(string authTicket, object userState) {
            if ((this.GetDataExtentsOperationCompleted == null)) {
                this.GetDataExtentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataExtentsOperationCompleted);
            }
            this.InvokeAsync("GetDataExtents", new object[] {
                        authTicket}, this.GetDataExtentsOperationCompleted, userState);
        }
        
        private void OnGetDataExtentsOperationCompleted(object arg) {
            if ((this.GetDataExtentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataExtentsCompleted(this, new GetDataExtentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByKeyword", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByKeyword(string authTicket, string keyword) {
            object[] results = this.Invoke("GetEpisodesByKeyword", new object[] {
                        authTicket,
                        keyword});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByKeywordAsync(string authTicket, string keyword) {
            this.GetEpisodesByKeywordAsync(authTicket, keyword, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByKeywordAsync(string authTicket, string keyword, object userState) {
            if ((this.GetEpisodesByKeywordOperationCompleted == null)) {
                this.GetEpisodesByKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByKeywordOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByKeyword", new object[] {
                        authTicket,
                        keyword}, this.GetEpisodesByKeywordOperationCompleted, userState);
        }
        
        private void OnGetEpisodesByKeywordOperationCompleted(object arg) {
            if ((this.GetEpisodesByKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByKeywordCompleted(this, new GetEpisodesByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByKeywordWithLimit", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByKeywordWithLimit(string authTicket, string keyword, uint limit) {
            object[] results = this.Invoke("GetEpisodesByKeywordWithLimit", new object[] {
                        authTicket,
                        keyword,
                        limit});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByKeywordWithLimitAsync(string authTicket, string keyword, uint limit) {
            this.GetEpisodesByKeywordWithLimitAsync(authTicket, keyword, limit, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByKeywordWithLimitAsync(string authTicket, string keyword, uint limit, object userState) {
            if ((this.GetEpisodesByKeywordWithLimitOperationCompleted == null)) {
                this.GetEpisodesByKeywordWithLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByKeywordWithLimitOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByKeywordWithLimit", new object[] {
                        authTicket,
                        keyword,
                        limit}, this.GetEpisodesByKeywordWithLimitOperationCompleted, userState);
        }
        
        private void OnGetEpisodesByKeywordWithLimitOperationCompleted(object arg) {
            if ((this.GetEpisodesByKeywordWithLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByKeywordWithLimitCompleted(this, new GetEpisodesByKeywordWithLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByKeywordWithOptions", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByKeywordWithOptions(string authTicket, string keyword, int titleSearch, int descSearch, int actorSearch, uint limit) {
            object[] results = this.Invoke("GetEpisodesByKeywordWithOptions", new object[] {
                        authTicket,
                        keyword,
                        titleSearch,
                        descSearch,
                        actorSearch,
                        limit});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByKeywordWithOptionsAsync(string authTicket, string keyword, int titleSearch, int descSearch, int actorSearch, uint limit) {
            this.GetEpisodesByKeywordWithOptionsAsync(authTicket, keyword, titleSearch, descSearch, actorSearch, limit, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByKeywordWithOptionsAsync(string authTicket, string keyword, int titleSearch, int descSearch, int actorSearch, uint limit, object userState) {
            if ((this.GetEpisodesByKeywordWithOptionsOperationCompleted == null)) {
                this.GetEpisodesByKeywordWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByKeywordWithOptionsOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByKeywordWithOptions", new object[] {
                        authTicket,
                        keyword,
                        titleSearch,
                        descSearch,
                        actorSearch,
                        limit}, this.GetEpisodesByKeywordWithOptionsOperationCompleted, userState);
        }
        
        private void OnGetEpisodesByKeywordWithOptionsOperationCompleted(object arg) {
            if ((this.GetEpisodesByKeywordWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByKeywordWithOptionsCompleted(this, new GetEpisodesByKeywordWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesByKeyword", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetSeriesByKeyword(string authTicket, string keyword) {
            object[] results = this.Invoke("GetSeriesByKeyword", new object[] {
                        authTicket,
                        keyword});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesByKeywordAsync(string authTicket, string keyword) {
            this.GetSeriesByKeywordAsync(authTicket, keyword, null);
        }
        
        /// <remarks/>
        public void GetSeriesByKeywordAsync(string authTicket, string keyword, object userState) {
            if ((this.GetSeriesByKeywordOperationCompleted == null)) {
                this.GetSeriesByKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesByKeywordOperationCompleted);
            }
            this.InvokeAsync("GetSeriesByKeyword", new object[] {
                        authTicket,
                        keyword}, this.GetSeriesByKeywordOperationCompleted, userState);
        }
        
        private void OnGetSeriesByKeywordOperationCompleted(object arg) {
            if ((this.GetSeriesByKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesByKeywordCompleted(this, new GetSeriesByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesByKeywordWithLimit", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetSeriesByKeywordWithLimit(string authTicket, string keyword, uint limit) {
            object[] results = this.Invoke("GetSeriesByKeywordWithLimit", new object[] {
                        authTicket,
                        keyword,
                        limit});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesByKeywordWithLimitAsync(string authTicket, string keyword, uint limit) {
            this.GetSeriesByKeywordWithLimitAsync(authTicket, keyword, limit, null);
        }
        
        /// <remarks/>
        public void GetSeriesByKeywordWithLimitAsync(string authTicket, string keyword, uint limit, object userState) {
            if ((this.GetSeriesByKeywordWithLimitOperationCompleted == null)) {
                this.GetSeriesByKeywordWithLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesByKeywordWithLimitOperationCompleted);
            }
            this.InvokeAsync("GetSeriesByKeywordWithLimit", new object[] {
                        authTicket,
                        keyword,
                        limit}, this.GetSeriesByKeywordWithLimitOperationCompleted, userState);
        }
        
        private void OnGetSeriesByKeywordWithLimitOperationCompleted(object arg) {
            if ((this.GetSeriesByKeywordWithLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesByKeywordWithLimitCompleted(this, new GetSeriesByKeywordWithLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodeByStationAndTime", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag GetEpisodeByStationAndTime(string authTicket, string uniqueChannelID, ulong time) {
            object[] results = this.Invoke("GetEpisodeByStationAndTime", new object[] {
                        authTicket,
                        uniqueChannelID,
                        time});
            return ((PVSPropertyBag)(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodeByStationAndTimeAsync(string authTicket, string uniqueChannelID, ulong time) {
            this.GetEpisodeByStationAndTimeAsync(authTicket, uniqueChannelID, time, null);
        }
        
        /// <remarks/>
        public void GetEpisodeByStationAndTimeAsync(string authTicket, string uniqueChannelID, ulong time, object userState) {
            if ((this.GetEpisodeByStationAndTimeOperationCompleted == null)) {
                this.GetEpisodeByStationAndTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodeByStationAndTimeOperationCompleted);
            }
            this.InvokeAsync("GetEpisodeByStationAndTime", new object[] {
                        authTicket,
                        uniqueChannelID,
                        time}, this.GetEpisodeByStationAndTimeOperationCompleted, userState);
        }
        
        private void OnGetEpisodeByStationAndTimeOperationCompleted(object arg) {
            if ((this.GetEpisodeByStationAndTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodeByStationAndTimeCompleted(this, new GetEpisodeByStationAndTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesBySeriesID", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesBySeriesID(string authTicket, string epgID) {
            object[] results = this.Invoke("GetEpisodesBySeriesID", new object[] {
                        authTicket,
                        epgID});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesBySeriesIDAsync(string authTicket, string epgID) {
            this.GetEpisodesBySeriesIDAsync(authTicket, epgID, null);
        }
        
        /// <remarks/>
        public void GetEpisodesBySeriesIDAsync(string authTicket, string epgID, object userState) {
            if ((this.GetEpisodesBySeriesIDOperationCompleted == null)) {
                this.GetEpisodesBySeriesIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesBySeriesIDOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesBySeriesID", new object[] {
                        authTicket,
                        epgID}, this.GetEpisodesBySeriesIDOperationCompleted, userState);
        }
        
        private void OnGetEpisodesBySeriesIDOperationCompleted(object arg) {
            if ((this.GetEpisodesBySeriesIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesBySeriesIDCompleted(this, new GetEpisodesBySeriesIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetFirstEpisodeBySeriesID", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag GetFirstEpisodeBySeriesID(string authTicket, string epgID) {
            object[] results = this.Invoke("GetFirstEpisodeBySeriesID", new object[] {
                        authTicket,
                        epgID});
            return ((PVSPropertyBag)(results[0]));
        }
        
        /// <remarks/>
        public void GetFirstEpisodeBySeriesIDAsync(string authTicket, string epgID) {
            this.GetFirstEpisodeBySeriesIDAsync(authTicket, epgID, null);
        }
        
        /// <remarks/>
        public void GetFirstEpisodeBySeriesIDAsync(string authTicket, string epgID, object userState) {
            if ((this.GetFirstEpisodeBySeriesIDOperationCompleted == null)) {
                this.GetFirstEpisodeBySeriesIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFirstEpisodeBySeriesIDOperationCompleted);
            }
            this.InvokeAsync("GetFirstEpisodeBySeriesID", new object[] {
                        authTicket,
                        epgID}, this.GetFirstEpisodeBySeriesIDOperationCompleted, userState);
        }
        
        private void OnGetFirstEpisodeBySeriesIDOperationCompleted(object arg) {
            if ((this.GetFirstEpisodeBySeriesIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFirstEpisodeBySeriesIDCompleted(this, new GetFirstEpisodeBySeriesIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByStationAndTimeRanges", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByStationAndTimeRanges(string authTicket, string uniqueChannelIDStart, string uniqueChannelIDEnd, ulong timeStart, ulong timeEnd) {
            object[] results = this.Invoke("GetEpisodesByStationAndTimeRanges", new object[] {
                        authTicket,
                        uniqueChannelIDStart,
                        uniqueChannelIDEnd,
                        timeStart,
                        timeEnd});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAndTimeRangesAsync(string authTicket, string uniqueChannelIDStart, string uniqueChannelIDEnd, ulong timeStart, ulong timeEnd) {
            this.GetEpisodesByStationAndTimeRangesAsync(authTicket, uniqueChannelIDStart, uniqueChannelIDEnd, timeStart, timeEnd, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAndTimeRangesAsync(string authTicket, string uniqueChannelIDStart, string uniqueChannelIDEnd, ulong timeStart, ulong timeEnd, object userState) {
            if ((this.GetEpisodesByStationAndTimeRangesOperationCompleted == null)) {
                this.GetEpisodesByStationAndTimeRangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByStationAndTimeRangesOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByStationAndTimeRanges", new object[] {
                        authTicket,
                        uniqueChannelIDStart,
                        uniqueChannelIDEnd,
                        timeStart,
                        timeEnd}, this.GetEpisodesByStationAndTimeRangesOperationCompleted, userState);
        }
        
        private void OnGetEpisodesByStationAndTimeRangesOperationCompleted(object arg) {
            if ((this.GetEpisodesByStationAndTimeRangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByStationAndTimeRangesCompleted(this, new GetEpisodesByStationAndTimeRangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByStationAndSeriesID2", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByStationAndSeriesID2(string authTicket, string uniqueChannelID, string epgID) {
            object[] results = this.Invoke("GetEpisodesByStationAndSeriesID2", new object[] {
                        authTicket,
                        uniqueChannelID,
                        epgID});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAndSeriesID2Async(string authTicket, string uniqueChannelID, string epgID) {
            this.GetEpisodesByStationAndSeriesID2Async(authTicket, uniqueChannelID, epgID, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAndSeriesID2Async(string authTicket, string uniqueChannelID, string epgID, object userState) {
            if ((this.GetEpisodesByStationAndSeriesID2OperationCompleted == null)) {
                this.GetEpisodesByStationAndSeriesID2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByStationAndSeriesID2OperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByStationAndSeriesID2", new object[] {
                        authTicket,
                        uniqueChannelID,
                        epgID}, this.GetEpisodesByStationAndSeriesID2OperationCompleted, userState);
        }
        
        private void OnGetEpisodesByStationAndSeriesID2OperationCompleted(object arg) {
            if ((this.GetEpisodesByStationAndSeriesID2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByStationAndSeriesID2Completed(this, new GetEpisodesByStationAndSeriesID2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByStation", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByStation(string authTicket, string uniqueChannelID) {
            object[] results = this.Invoke("GetEpisodesByStation", new object[] {
                        authTicket,
                        uniqueChannelID});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAsync(string authTicket, string uniqueChannelID) {
            this.GetEpisodesByStationAsync(authTicket, uniqueChannelID, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAsync(string authTicket, string uniqueChannelID, object userState) {
            if ((this.GetEpisodesByStationOperationCompleted == null)) {
                this.GetEpisodesByStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByStationOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByStation", new object[] {
                        authTicket,
                        uniqueChannelID}, this.GetEpisodesByStationOperationCompleted, userState);
        }
        
        private void OnGetEpisodesByStationOperationCompleted(object arg) {
            if ((this.GetEpisodesByStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByStationCompleted(this, new GetEpisodesByStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetFirstEpisodeByStationAndSeriesID2", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag GetFirstEpisodeByStationAndSeriesID2(string authTicket, string uniqueChannelID, string epgID) {
            object[] results = this.Invoke("GetFirstEpisodeByStationAndSeriesID2", new object[] {
                        authTicket,
                        uniqueChannelID,
                        epgID});
            return ((PVSPropertyBag)(results[0]));
        }
        
        /// <remarks/>
        public void GetFirstEpisodeByStationAndSeriesID2Async(string authTicket, string uniqueChannelID, string epgID) {
            this.GetFirstEpisodeByStationAndSeriesID2Async(authTicket, uniqueChannelID, epgID, null);
        }
        
        /// <remarks/>
        public void GetFirstEpisodeByStationAndSeriesID2Async(string authTicket, string uniqueChannelID, string epgID, object userState) {
            if ((this.GetFirstEpisodeByStationAndSeriesID2OperationCompleted == null)) {
                this.GetFirstEpisodeByStationAndSeriesID2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFirstEpisodeByStationAndSeriesID2OperationCompleted);
            }
            this.InvokeAsync("GetFirstEpisodeByStationAndSeriesID2", new object[] {
                        authTicket,
                        uniqueChannelID,
                        epgID}, this.GetFirstEpisodeByStationAndSeriesID2OperationCompleted, userState);
        }
        
        private void OnGetFirstEpisodeByStationAndSeriesID2OperationCompleted(object arg) {
            if ((this.GetFirstEpisodeByStationAndSeriesID2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFirstEpisodeByStationAndSeriesID2Completed(this, new GetFirstEpisodeByStationAndSeriesID2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByRange2", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetEpisodesByRange2(string authTicket, string uniqueChannelIDStart, string uniqueChannelIDEnd, ulong timeStart, ulong timeEnd) {
            object[] results = this.Invoke("GetEpisodesByRange2", new object[] {
                        authTicket,
                        uniqueChannelIDStart,
                        uniqueChannelIDEnd,
                        timeStart,
                        timeEnd});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByRange2Async(string authTicket, string uniqueChannelIDStart, string uniqueChannelIDEnd, ulong timeStart, ulong timeEnd) {
            this.GetEpisodesByRange2Async(authTicket, uniqueChannelIDStart, uniqueChannelIDEnd, timeStart, timeEnd, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByRange2Async(string authTicket, string uniqueChannelIDStart, string uniqueChannelIDEnd, ulong timeStart, ulong timeEnd, object userState) {
            if ((this.GetEpisodesByRange2OperationCompleted == null)) {
                this.GetEpisodesByRange2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByRange2OperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByRange2", new object[] {
                        authTicket,
                        uniqueChannelIDStart,
                        uniqueChannelIDEnd,
                        timeStart,
                        timeEnd}, this.GetEpisodesByRange2OperationCompleted, userState);
        }
        
        private void OnGetEpisodesByRange2OperationCompleted(object arg) {
            if ((this.GetEpisodesByRange2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByRange2Completed(this, new GetEpisodesByRange2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByRange3", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetEpisodesByRange3(string authTicket, string[] channels, ulong timeStart, ulong timeEnd) {
            object[] results = this.Invoke("GetEpisodesByRange3", new object[] {
                        authTicket,
                        channels,
                        timeStart,
                        timeEnd});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByRange3Async(string authTicket, string[] channels, ulong timeStart, ulong timeEnd) {
            this.GetEpisodesByRange3Async(authTicket, channels, timeStart, timeEnd, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByRange3Async(string authTicket, string[] channels, ulong timeStart, ulong timeEnd, object userState) {
            if ((this.GetEpisodesByRange3OperationCompleted == null)) {
                this.GetEpisodesByRange3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByRange3OperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByRange3", new object[] {
                        authTicket,
                        channels,
                        timeStart,
                        timeEnd}, this.GetEpisodesByRange3OperationCompleted, userState);
        }
        
        private void OnGetEpisodesByRange3OperationCompleted(object arg) {
            if ((this.GetEpisodesByRange3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByRange3Completed(this, new GetEpisodesByRange3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesCollection", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetSeriesCollection(string authTicket) {
            object[] results = this.Invoke("GetSeriesCollection", new object[] {
                        authTicket});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesCollectionAsync(string authTicket) {
            this.GetSeriesCollectionAsync(authTicket, null);
        }
        
        /// <remarks/>
        public void GetSeriesCollectionAsync(string authTicket, object userState) {
            if ((this.GetSeriesCollectionOperationCompleted == null)) {
                this.GetSeriesCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesCollectionOperationCompleted);
            }
            this.InvokeAsync("GetSeriesCollection", new object[] {
                        authTicket}, this.GetSeriesCollectionOperationCompleted, userState);
        }
        
        private void OnGetSeriesCollectionOperationCompleted(object arg) {
            if ((this.GetSeriesCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesCollectionCompleted(this, new GetSeriesCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesCount2", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetSeriesCount2(string authTicket) {
            object[] results = this.Invoke("GetSeriesCount2", new object[] {
                        authTicket});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesCount2Async(string authTicket) {
            this.GetSeriesCount2Async(authTicket, null);
        }
        
        /// <remarks/>
        public void GetSeriesCount2Async(string authTicket, object userState) {
            if ((this.GetSeriesCount2OperationCompleted == null)) {
                this.GetSeriesCount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesCount2OperationCompleted);
            }
            this.InvokeAsync("GetSeriesCount2", new object[] {
                        authTicket}, this.GetSeriesCount2OperationCompleted, userState);
        }
        
        private void OnGetSeriesCount2OperationCompleted(object arg) {
            if ((this.GetSeriesCount2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesCount2Completed(this, new GetSeriesCount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeries2", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetSeries2(string authTicket, uint uiStart, uint uiResults) {
            object[] results = this.Invoke("GetSeries2", new object[] {
                        authTicket,
                        uiStart,
                        uiResults});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeries2Async(string authTicket, uint uiStart, uint uiResults) {
            this.GetSeries2Async(authTicket, uiStart, uiResults, null);
        }
        
        /// <remarks/>
        public void GetSeries2Async(string authTicket, uint uiStart, uint uiResults, object userState) {
            if ((this.GetSeries2OperationCompleted == null)) {
                this.GetSeries2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeries2OperationCompleted);
            }
            this.InvokeAsync("GetSeries2", new object[] {
                        authTicket,
                        uiStart,
                        uiResults}, this.GetSeries2OperationCompleted, userState);
        }
        
        private void OnGetSeries2OperationCompleted(object arg) {
            if ((this.GetSeries2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeries2Completed(this, new GetSeries2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/SearchByTitle2", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint SearchByTitle2(string authTicket, string partialTitle) {
            object[] results = this.Invoke("SearchByTitle2", new object[] {
                        authTicket,
                        partialTitle});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void SearchByTitle2Async(string authTicket, string partialTitle) {
            this.SearchByTitle2Async(authTicket, partialTitle, null);
        }
        
        /// <remarks/>
        public void SearchByTitle2Async(string authTicket, string partialTitle, object userState) {
            if ((this.SearchByTitle2OperationCompleted == null)) {
                this.SearchByTitle2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchByTitle2OperationCompleted);
            }
            this.InvokeAsync("SearchByTitle2", new object[] {
                        authTicket,
                        partialTitle}, this.SearchByTitle2OperationCompleted, userState);
        }
        
        private void OnSearchByTitle2OperationCompleted(object arg) {
            if ((this.SearchByTitle2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchByTitle2Completed(this, new SearchByTitle2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetCategories", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetCategories(string authTicket, string bstrCategory) {
            object[] results = this.Invoke("GetCategories", new object[] {
                        authTicket,
                        bstrCategory});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(string authTicket, string bstrCategory) {
            this.GetCategoriesAsync(authTicket, bstrCategory, null);
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(string authTicket, string bstrCategory, object userState) {
            if ((this.GetCategoriesOperationCompleted == null)) {
                this.GetCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetCategories", new object[] {
                        authTicket,
                        bstrCategory}, this.GetCategoriesOperationCompleted, userState);
        }
        
        private void OnGetCategoriesOperationCompleted(object arg) {
            if ((this.GetCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesByCategory", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetSeriesByCategory(string authTicket, string bstrCategory, string bstrSubcategory) {
            object[] results = this.Invoke("GetSeriesByCategory", new object[] {
                        authTicket,
                        bstrCategory,
                        bstrSubcategory});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesByCategoryAsync(string authTicket, string bstrCategory, string bstrSubcategory) {
            this.GetSeriesByCategoryAsync(authTicket, bstrCategory, bstrSubcategory, null);
        }
        
        /// <remarks/>
        public void GetSeriesByCategoryAsync(string authTicket, string bstrCategory, string bstrSubcategory, object userState) {
            if ((this.GetSeriesByCategoryOperationCompleted == null)) {
                this.GetSeriesByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetSeriesByCategory", new object[] {
                        authTicket,
                        bstrCategory,
                        bstrSubcategory}, this.GetSeriesByCategoryOperationCompleted, userState);
        }
        
        private void OnGetSeriesByCategoryOperationCompleted(object arg) {
            if ((this.GetSeriesByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesByCategoryCompleted(this, new GetSeriesByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetEpisodesByStationAndSeriesID", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetEpisodesByStationAndSeriesID(string authTicket, string uniqueChannelID, string epgID, ulong time) {
            object[] results = this.Invoke("GetEpisodesByStationAndSeriesID", new object[] {
                        authTicket,
                        uniqueChannelID,
                        epgID,
                        time});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAndSeriesIDAsync(string authTicket, string uniqueChannelID, string epgID, ulong time) {
            this.GetEpisodesByStationAndSeriesIDAsync(authTicket, uniqueChannelID, epgID, time, null);
        }
        
        /// <remarks/>
        public void GetEpisodesByStationAndSeriesIDAsync(string authTicket, string uniqueChannelID, string epgID, ulong time, object userState) {
            if ((this.GetEpisodesByStationAndSeriesIDOperationCompleted == null)) {
                this.GetEpisodesByStationAndSeriesIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesByStationAndSeriesIDOperationCompleted);
            }
            this.InvokeAsync("GetEpisodesByStationAndSeriesID", new object[] {
                        authTicket,
                        uniqueChannelID,
                        epgID,
                        time}, this.GetEpisodesByStationAndSeriesIDOperationCompleted, userState);
        }
        
        private void OnGetEpisodesByStationAndSeriesIDOperationCompleted(object arg) {
            if ((this.GetEpisodesByStationAndSeriesIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesByStationAndSeriesIDCompleted(this, new GetEpisodesByStationAndSeriesIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesCount", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetSeriesCount(string authTicket) {
            object[] results = this.Invoke("GetSeriesCount", new object[] {
                        authTicket});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesCountAsync(string authTicket) {
            this.GetSeriesCountAsync(authTicket, null);
        }
        
        /// <remarks/>
        public void GetSeriesCountAsync(string authTicket, object userState) {
            if ((this.GetSeriesCountOperationCompleted == null)) {
                this.GetSeriesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesCountOperationCompleted);
            }
            this.InvokeAsync("GetSeriesCount", new object[] {
                        authTicket}, this.GetSeriesCountOperationCompleted, userState);
        }
        
        private void OnGetSeriesCountOperationCompleted(object arg) {
            if ((this.GetSeriesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesCountCompleted(this, new GetSeriesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/GetSeriesByRange", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PVSPropertyBag[] GetSeriesByRange(string authTicket, uint uiStart, uint uiEnd) {
            object[] results = this.Invoke("GetSeriesByRange", new object[] {
                        authTicket,
                        uiStart,
                        uiEnd});
            return ((PVSPropertyBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesByRangeAsync(string authTicket, uint uiStart, uint uiEnd) {
            this.GetSeriesByRangeAsync(authTicket, uiStart, uiEnd, null);
        }
        
        /// <remarks/>
        public void GetSeriesByRangeAsync(string authTicket, uint uiStart, uint uiEnd, object userState) {
            if ((this.GetSeriesByRangeOperationCompleted == null)) {
                this.GetSeriesByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesByRangeOperationCompleted);
            }
            this.InvokeAsync("GetSeriesByRange", new object[] {
                        authTicket,
                        uiStart,
                        uiEnd}, this.GetSeriesByRangeOperationCompleted, userState);
        }
        
        private void OnGetSeriesByRangeOperationCompleted(object arg) {
            if ((this.GetSeriesByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesByRangeCompleted(this, new GetSeriesByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.snapstream.com/WebService/SearchByTitle", RequestNamespace="http://www.snapstream.com/WebService", ResponseNamespace="http://www.snapstream.com/WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint SearchByTitle(string authTicket, string partialTitle) {
            object[] results = this.Invoke("SearchByTitle", new object[] {
                        authTicket,
                        partialTitle});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void SearchByTitleAsync(string authTicket, string partialTitle) {
            this.SearchByTitleAsync(authTicket, partialTitle, null);
        }
        
        /// <remarks/>
        public void SearchByTitleAsync(string authTicket, string partialTitle, object userState) {
            if ((this.SearchByTitleOperationCompleted == null)) {
                this.SearchByTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchByTitleOperationCompleted);
            }
            this.InvokeAsync("SearchByTitle", new object[] {
                        authTicket,
                        partialTitle}, this.SearchByTitleOperationCompleted, userState);
        }
        
        private void OnSearchByTitleOperationCompleted(object arg) {
            if ((this.SearchByTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchByTitleCompleted(this, new SearchByTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.snapstream.com/types")]
    public partial class PVSPropertyBag {
        
        private PVSProperty[] propertiesField;
        
        /// <remarks/>
        public PVSProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.snapstream.com/types")]
    public partial class PVSProperty {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetLastUpdateTimeCompletedEventHandler(object sender, GetLastUpdateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastUpdateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastUpdateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ulong Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDataExtentsCompletedEventHandler(object sender, GetDataExtentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataExtentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataExtentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ulong Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ulong maximum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByKeywordCompletedEventHandler(object sender, GetEpisodesByKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByKeywordWithLimitCompletedEventHandler(object sender, GetEpisodesByKeywordWithLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByKeywordWithLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByKeywordWithLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByKeywordWithOptionsCompletedEventHandler(object sender, GetEpisodesByKeywordWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByKeywordWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByKeywordWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesByKeywordCompletedEventHandler(object sender, GetSeriesByKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesByKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesByKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesByKeywordWithLimitCompletedEventHandler(object sender, GetSeriesByKeywordWithLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesByKeywordWithLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesByKeywordWithLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodeByStationAndTimeCompletedEventHandler(object sender, GetEpisodeByStationAndTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodeByStationAndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodeByStationAndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesBySeriesIDCompletedEventHandler(object sender, GetEpisodesBySeriesIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesBySeriesIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesBySeriesIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFirstEpisodeBySeriesIDCompletedEventHandler(object sender, GetFirstEpisodeBySeriesIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFirstEpisodeBySeriesIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFirstEpisodeBySeriesIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByStationAndTimeRangesCompletedEventHandler(object sender, GetEpisodesByStationAndTimeRangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByStationAndTimeRangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByStationAndTimeRangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByStationAndSeriesID2CompletedEventHandler(object sender, GetEpisodesByStationAndSeriesID2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByStationAndSeriesID2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByStationAndSeriesID2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByStationCompletedEventHandler(object sender, GetEpisodesByStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFirstEpisodeByStationAndSeriesID2CompletedEventHandler(object sender, GetFirstEpisodeByStationAndSeriesID2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFirstEpisodeByStationAndSeriesID2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFirstEpisodeByStationAndSeriesID2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByRange2CompletedEventHandler(object sender, GetEpisodesByRange2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByRange2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByRange2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByRange3CompletedEventHandler(object sender, GetEpisodesByRange3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByRange3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByRange3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesCollectionCompletedEventHandler(object sender, GetSeriesCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesCount2CompletedEventHandler(object sender, GetSeriesCount2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesCount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesCount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeries2CompletedEventHandler(object sender, GetSeries2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeries2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeries2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SearchByTitle2CompletedEventHandler(object sender, SearchByTitle2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchByTitle2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchByTitle2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCategoriesCompletedEventHandler(object sender, GetCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesByCategoryCompletedEventHandler(object sender, GetSeriesByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEpisodesByStationAndSeriesIDCompletedEventHandler(object sender, GetEpisodesByStationAndSeriesIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesByStationAndSeriesIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesByStationAndSeriesIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesCountCompletedEventHandler(object sender, GetSeriesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeriesByRangeCompletedEventHandler(object sender, GetSeriesByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PVSPropertyBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PVSPropertyBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SearchByTitleCompletedEventHandler(object sender, SearchByTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchByTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchByTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591